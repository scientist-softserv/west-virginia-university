version: '3.4'
services:
  app:
    build:
      context: ./
      dockerfile: Dockerfile.dev
    env_file:
      - './env/env.dev.hydra'
    volumes:
      - ./hydra:/home/hydra
      # map node_modules to a persistent volume
      - ./data/node_modules:/home/hydra/node_modules
      # map in various bash scripts
      - ./scripts:/home/hydra/scripts  
      # map in various persistent directories in the data folder
      - ./data/logs:/home/hydra/log 
      - ./data/pdf:/home/hydra/tmp/pdf
      - ./data/thumbnails:/home/hydra/tmp/thumbnails
      - ./data/images:/home/hydra/tmp/images
      # map in various persistent directories in the tmp folder
      - ./data/imports:/home/hydra/tmp/imports
      - ./data/exports:/home/hydra/tmp/exports
      # don't mount tmp directory  
      - /home/hydra/tmp 
    networks:
      - hydra

  web:
    extends: app
    container_name: acda_portal
    command: bash -c "bundle install; sh ./scripts/startup.sh"
    ports:
      - "3000:3000"
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_started
      fcrepo:
        condition: service_started
      solr:
        condition: service_started
      workers:
        condition: service_started

  workers:
    extends: app
    container_name: sidekiq
    command:  bash -c "bundle install; bundle exec sidekiq -C config/sidekiq.yml"        
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_started
      fcrepo:
        condition: service_started
      solr:
        condition: service_started
    stdin_open: true
    tty: true

  memcached:
    image: bitnami/memcached
    container_name: memcached
    ports:
      - "11211"
    networks:
      - hydra

  redis:
    image: redis:alpine
    container_name: redis
    command: redis-server
    ports:
      - "6379"
    env_file:
      - './env/env.dev.redis'
    volumes:
      - redis:/var/lib/redis/data
    restart: unless-stopped
    healthcheck:
      test: redis-cli -h redis ping
      interval: 30s
      timeout: 3s
      retries: 3
    networks:
      - hydra

  fcrepo:
    image: fcrepo/fcrepo:6.4.0
    container_name: fcrepo
    depends_on:
      - db
    env_file:
      - './env/env.fedora'
    ports:
      - "8080:8080"
    volumes:
      - fcrepo:/data:cached
    networks:
      - hydra

  solr:
    image: solr:9.3.0
    container_name: solr
    restart: on-failure
    ports:
      - "8983:8983"
    command:
      - sh
      - "-c"
      - "solr-precreate hydra_dev /opt/solr/server/configsets/hydraconf"
      - "&&"
      - "chown -R 8983:8983 /var/solr"
    volumes:
      - ./hydra/solr/conf:/opt/solr/server/configsets/hydraconf
      - ./data/logs/solr:/var/solr/logs      
      - solr:/var/solr
    networks:
      - hydra

  db:
    container_name: db
    image: postgres:16-alpine
    expose:
      - "5432"
    env_file: 
      - './env/env.db'
    volumes:
      - postgres:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "fcrepo"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    networks:
      - hydra

volumes:
  postgres:
  fcrepo:
  redis:
  solr:

networks:
  hydra:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-hydra
